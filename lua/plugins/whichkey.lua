return {
  'folke/which-key.nvim',
  event = 'VeryLazy',
  opts = {
    spec = {
      { '<leader>c', group = 'code' },
      { '<leader>cc', ':SlimeConfig<cr>', desc = 'slime config' },
      { '<leader>cn', ':split term://$SHELL<cr>', desc = 'new terminal' },
      { '<leader>d', group = 'Test/Debug' },
      { '<leader>f', group = 'Find/search' },
      { '<leader>fc', '<cmd>Telescope git_commits<cr>', desc = 'git commits' },
      { '<leader>ff', '<cmd>Telescope find_files<cr>', desc = 'files' },
      { '<leader>fg', '<cmd>Telescope live_grep<cr>', desc = 'grep' },
      { '<leader>fh', '<cmd>Telescope help_tags<cr>', desc = 'help' },
      { '<leader>fj', '<cmd>Telescope jumplist<cr>', desc = 'jumplist' },
      { '<leader>fk', '<cmd>Telescope keymaps<cr>', desc = 'keymaps' },
      { '<leader>fl', '<cmd>Telescope loclist<cr>', desc = 'loclist' },
      { '<leader>fq', '<cmd>Telescope quickfix<cr>', desc = 'quickfix' },
      { '<leader>fr', '<cmd>Telescope lsp_references<cr>', desc = 'references' },
      { '<leader>fw', '<cmd>Telescope file_browser<cr>', desc = 'File browser' },
      { '<leader>g', group = 'Git' },
      { '<leader>gc', '<cmd>Neogit commit<cr>', desc = 'commit' },
      { '<leader>gg', '<cmd>Neogit<cr>', desc = 'neogit' },
      { '<leader>l', group = 'LSP' },
      { '<leader>o', group = 'Obsidian' },
      { '<leader>oL', '<cmd>ObsidianLinkNew<cr>', desc = 'create new link' },
      { '<leader>oa', '<cmd>ObsidianTags<cr>', desc = 'tags' },
      { '<leader>ob', '<cmd>ObsidianBacklinks<cr>', desc = 'backlinks' },
      { '<leader>oe', '<cmd>ObsidianExtractNote<cr>', desc = 'extract note' },
      { '<leader>of', '<cmd>ObsidianFollowLink<cr>', desc = 'follow link' },
      { '<leader>ol', '<cmd>ObsidianLink<cr>', desc = 'create link to note' },
      { '<leader>on', '<cmd>ObsidianNew<cr>', desc = 'new note' },
      { '<leader>oo', '<cmd>ObsidianQuickSwitch<cr>', desc = 'quick switch' },
      { '<leader>os', '<cmd>ObsidianSearch<cr>', desc = 'search' },
      { '<leader>ot', '<cmd>ObsidianTemplate<cr>', desc = 'insert template' },
      { '<leader>q', group = 'Quarto' },
      { '<leader>s', group = 'Spell' },
      { '<leader>sb', 'zw', desc = 'bad' },
      { '<leader>sg', 'zg', desc = 'good' },
      { '<leader>sn', ']s', desc = 'next' },
      { '<leader>sp', '[s', desc = 'previous' },
      { '<leader>sr', 'zg', desc = 'right' },
      { '<leader>ss', '<cmd>Telescope spell_suggest<cr>', desc = 'spelling' },
      { '<leader>sw', 'zw', desc = 'wrong' },
      { '<leader>t', group = 'Todo' },
      { '<leader>tt', '<cmd>ToDoTxtTasksToggle<cr>', desc = 'Toggle Todo.txt' },
      { '<leader>w', group = 'Workspace' },
      { '<leader>x', '<cmd>bd<cr>', desc = 'close buffer' },
    },
  },
  -- spelling = {
  --     enabled = true, -- enabling this will show WhichKey when pressing z= to select spelling suggestions
  --     suggestions = 20, -- how many suggestions should be shown in the list?
  --   },
}
